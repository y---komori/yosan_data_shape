#/bin/bash
# Yosan_Data.sh  2019.4.13
# エラーが発生したら処理中止
set -e
###########################################################################
# このスクリプトについて
# 概要
# 企業会計システムから出てくるCSVデータの款項目データが一部省略され、使いにくいことから整形する

# 処理フロー
# nlで行番号を付加
# gawk
# 1.BEGIN $a,$b,$c1を初期化
# 2.行2列1文字目のみスペースなら第1列目を$a、$b,$cを0として、行末尾に$a,$b,$cを付加
# 3.行2列2文字目までスペースなら第1列目を$b、$cを0として、行末尾に$a,$b,$cを付加
# 4.行2列3文字目までスペースなら第1列目を$cとして、行末尾に$a,$b,$cを付加
# 一時ファイル出力
# grepで2列空白以外を抽出
# sort

# 使い方
# !!このディレクトリに移動後、右クリックで git bash起動後、 $ ./Yosan_Data.shを入力

###########################################################################
# 処理するファイルの設定
MEISAI_FILE=meisai.csv
#フィールド
# "1款項目名称,"2税込金額"

# ディレクトリ
DIRECTORY=/Users/yaskom2002/
###########################################################################
# 関数定義
# main処理で１列目頭の空白数で分離して配列に読み込む。
# end処理で配列を出力する。
#a[NR,(1..4)]→a[NR,1]1行1列・・a[NR,4]1行4列以降を入れる

koumoku_fuka(){
  gawk 'BEGIN { FS=","; OFS=","; } 
	NR >0 {
	    switch($2){
	    case /^\s[0-9]+[^a-zA-Z0-9]+/ :	#2列目第１文字空白
	      a[NR,1]=$2 ; a[NR,2]=""; a[NR,3]=""; a[NR,4]=$3; 
	      break

	    case /^\s{2}[0-9]+[^a-zA-Z0-9]+/ :	#2列目第2文字まで空白
	      a[NR,1]=""; a[NR,2]=$2; a[NR,3]=""; a[NR,4]=$3;  
	      break

	    case /^\s{3}[0-9]+[^a-zA-Z0-9]+/ :	#2列目第3文字まで空白
	      a[NR,1]=""; a[NR,2]=""; a[NR,3]=$2; a[NR,4]=$3;  
	      break
	    }
        }
	END {
	    for(i in a) {
		# awkでは多次元配列について添字を一つの文字列に連結している
		# それを分離する。sep[]に分離した添字が入る
		split(i,sep,SUBSEP)
		print sep[1],sep[2],a[sep[1],sep[2]]
	    }
    	}'
}

# 処理作業


# システムから出力された生データの漢字コードをUTF8変換→行番号付きで出力
# koumoku_fukaで行頭空白数で項目を分けて、一時ファイル出力
# 一時ファイルで１列目空白行を抽出、
# →漢字コードをSJIS変換→tmp1.csv作成; cutで表示項目指定

cat ${DIRECTORY}${MEISAI_FILE} | nkf -w8 | nl -s"," \
    | koumoku_fuka |sort \
    

#cat ${DIRECTORY}${MEISAI_FILE} | nkf -w8 \
#    | koumoku_fuka \



# | LANG=C sort -t "," -k 7,7 -k 22,22 -k 26,26 -k 28,28 | cut -d "," -f 7-15,18,20,21,22,26-29 | nkf -s > tmp1.csv

# 行末尾に款項目情報を付加
# 正規表現チェックサイト　https://rubular.com/が役に立った


